{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction FileUploadComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class FileUploadComponent {\n  constructor() {\n    this.listOfFiles = [];\n    this.type = 'file';\n    this.accept = '';\n    this.styles = '';\n    this.error = false;\n    this.errorMessage = 'Unknown error ';\n    this.fileSelected = new EventEmitter();\n  }\n  handleFileSize(event) {\n    this.listOfFiles = event.target.files;\n    for (let file of this.listOfFiles) {\n      if (file.size / 1000000 >= this.fileSizeLimit) {\n        this.error = true;\n        this.errorMessage = 'Sorry, the file you uploaded is too large. The maximum file size is ' + this.fileSizeLimit + 'MB';\n      } else this.error = false;\n    }\n  }\n  fileUploaded(event) {\n    this.fileSelected.emit(event.target.files);\n  }\n}\nFileUploadComponent.ɵfac = function FileUploadComponent_Factory(t) {\n  return new (t || FileUploadComponent)();\n};\nFileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileUploadComponent,\n  selectors: [[\"app-file-upload\"]],\n  inputs: {\n    accept: \"accept\",\n    styles: \"styles\",\n    fileSizeLimit: \"fileSizeLimit\",\n    error: \"error\",\n    errorMessage: \"errorMessage\"\n  },\n  outputs: {\n    fileSelected: \"fileSelected\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[3, \"type\", \"accept\", \"ngClass\", \"change\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [2, \"color\", \"red\"]],\n  template: function FileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0);\n      i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_0_listener($event) {\n        return ctx.handleFileSize($event);\n      })(\"change\", function FileUploadComponent_Template_input_change_0_listener($event) {\n        return ctx.fileUploaded($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(1, FileUploadComponent_div_1_Template, 2, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"type\", ctx.type)(\"accept\", ctx.accept)(\"ngClass\", ctx.styles);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf],\n  styles: [\"input[type=\\\"file\\\"][_ngcontent-%COMP%] {\\r\\n  \\r\\n    border-radius: 0.25rem;\\r\\n  \\r\\n    border-width: 1px;\\r\\n  \\r\\n    border-style: solid;\\r\\n  \\r\\n    --tw-border-opacity: 1;\\r\\n  \\r\\n    border-color: rgb(209 213 219 / var(--tw-border-opacity));\\r\\n  \\r\\n    padding: 0.5rem;\\r\\n  \\r\\n    font-family: \\\"Helvetica\\\", \\\"Arial\\\", \\\"sans-serif\\\";\\r\\n  \\r\\n    font-size: 0.875rem;\\r\\n  \\r\\n    line-height: 1.25rem;\\r\\n  \\r\\n    --tw-text-opacity: 1;\\r\\n  \\r\\n    color: rgb(156 163 175 / var(--tw-text-opacity))\\n}\\r\\n  \\r\\n  input[type=\\\"file\\\"][_ngcontent-%COMP%]::file-selector-button {\\r\\n  \\r\\n    margin-right: 1rem;\\r\\n  \\r\\n    cursor: pointer;\\r\\n  \\r\\n    border-radius: 0.25rem;\\r\\n  \\r\\n    border-width: 1px;\\r\\n  \\r\\n    border-style: solid;\\r\\n  \\r\\n    --tw-border-opacity: 1;\\r\\n  \\r\\n    border-color: rgb(243 244 246 / var(--tw-border-opacity));\\r\\n  \\r\\n    --tw-bg-opacity: 1;\\r\\n  \\r\\n    background-color: rgb(229 231 235 / var(--tw-bg-opacity));\\r\\n  \\r\\n    padding: 0.25rem;\\r\\n  \\r\\n    --tw-text-opacity: 1;\\r\\n  \\r\\n    color: rgb(75 85 99 / var(--tw-text-opacity))\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGUtdXBsb2FkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkVBQ0k7O0lBQUEsc0JBQXNGOztJQUF0RixpQkFBc0Y7O0lBQXRGLG1CQUFzRjs7SUFBdEYsc0JBQXNGOztJQUF0Rix5REFBc0Y7O0lBQXRGLGVBQXNGOztJQUF0RiwrQ0FBc0Y7O0lBQXRGLG1CQUFzRjs7SUFBdEYsb0JBQXNGOztJQUF0RixvQkFBc0Y7O0lBQXRGO0FBQXNGOztFQUt0Rjs7SUFBQSxrQkFBb0c7O0lBQXBHLGVBQW9HOztJQUFwRyxzQkFBb0c7O0lBQXBHLGlCQUFvRzs7SUFBcEcsbUJBQW9HOztJQUFwRyxzQkFBb0c7O0lBQXBHLHlEQUFvRzs7SUFBcEcsa0JBQW9HOztJQUFwRyx5REFBb0c7O0lBQXBHLGdCQUFvRzs7SUFBcEcsb0JBQW9HOztJQUFwRztBQUFvRyIsImZpbGUiOiJmaWxlLXVwbG9hZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICBpbnB1dFt0eXBlPVwiZmlsZVwiXSB7XHJcbiAgICBAYXBwbHkgcm91bmRlZCBib3JkZXIgYm9yZGVyLXNvbGlkIGJvcmRlci1ncmF5LTMwMCB0ZXh0LXNtIGZvbnQtc2FucyB0ZXh0LWdyYXktNDAwIHAtMjtcclxuICAgIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwiZmlsZVwiXTo6ZmlsZS1zZWxlY3Rvci1idXR0b24ge1xyXG4gICAgIFxyXG4gICAgQGFwcGx5IHRleHQtZ3JheS02MDAgY3Vyc29yLXBvaW50ZXIgYmctZ3JheS0yMDAgcm91bmRlZCBib3JkZXIgYm9yZGVyLXNvbGlkIGJvcmRlci1ncmF5LTEwMCBwLTEgbXItNDtcclxuICAgXHJcbiAgfVxyXG4gICJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmlsZS11cGxvYWQtY29tcG9uZW50L2ZpbGUtdXBsb2FkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkVBQ0k7O0lBQUEsc0JBQXNGOztJQUF0RixpQkFBc0Y7O0lBQXRGLG1CQUFzRjs7SUFBdEYsc0JBQXNGOztJQUF0Rix5REFBc0Y7O0lBQXRGLGVBQXNGOztJQUF0RiwrQ0FBc0Y7O0lBQXRGLG1CQUFzRjs7SUFBdEYsb0JBQXNGOztJQUF0RixvQkFBc0Y7O0lBQXRGO0FBQXNGOztFQUt0Rjs7SUFBQSxrQkFBb0c7O0lBQXBHLGVBQW9HOztJQUFwRyxzQkFBb0c7O0lBQXBHLGlCQUFvRzs7SUFBcEcsbUJBQW9HOztJQUFwRyxzQkFBb0c7O0lBQXBHLHlEQUFvRzs7SUFBcEcsa0JBQW9HOztJQUFwRyx5REFBb0c7O0lBQXBHLGdCQUFvRzs7SUFBcEcsb0JBQW9HOztJQUFwRztBQUFvRzs7QUE4Q3hHLDRrQ0FBNGtDIiwic291cmNlc0NvbnRlbnQiOlsiICBpbnB1dFt0eXBlPVwiZmlsZVwiXSB7XHJcbiAgICBAYXBwbHkgcm91bmRlZCBib3JkZXIgYm9yZGVyLXNvbGlkIGJvcmRlci1ncmF5LTMwMCB0ZXh0LXNtIGZvbnQtc2FucyB0ZXh0LWdyYXktNDAwIHAtMjtcclxuICAgIH1cclxuICBcclxuICBpbnB1dFt0eXBlPVwiZmlsZVwiXTo6ZmlsZS1zZWxlY3Rvci1idXR0b24ge1xyXG4gICAgIFxyXG4gICAgQGFwcGx5IHRleHQtZ3JheS02MDAgY3Vyc29yLXBvaW50ZXIgYmctZ3JheS0yMDAgcm91bmRlZCBib3JkZXIgYm9yZGVyLXNvbGlkIGJvcmRlci1ncmF5LTEwMCBwLTEgbXItNDtcclxuICAgXHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;;;;ICMtEC,8BAAuC;IAAAA,YAAgB;IAAAA,iBAAM;;;;IAAtBA,eAAgB;IAAhBA,yCAAgB;;;ADCvD,OAAM,MAAOC,mBAAmB;EALhCC;IAMI,gBAAW,GAAO,EAAE;IAEpB,SAAI,GAAW,MAAM;IACZ,WAAM,GAAW,EAAE;IACnB,WAAM,GAAW,EAAE;IAEnB,UAAK,GAAS,KAAK;IACnB,iBAAY,GAAQ,gBAAgB;IACnC,iBAAY,GAAG,IAAIH,YAAY;;EAEzCI,cAAc,CAACC,KAAS;IACtB,IAAI,CAACC,WAAW,GAACD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnC,KAAK,IAAIC,IAAI,IAAI,IAAI,CAACH,WAAW,EAAC;MAChC,IAAIG,IAAI,CAACC,IAAI,GAAC,OAAO,IAAE,IAAI,CAACC,aAAa,EAC1C;QAAE,IAAI,CAACC,KAAK,GAAE,IAAI;QACjB,IAAI,CAACC,YAAY,GAAC,sEAAsE,GAAC,IAAI,CAACF,aAAa,GAAE,IAAI;OAClH,MAEC,IAAI,CAACC,KAAK,GAAE,KAAK;;EAErB;EAEAE,YAAY,CAACT,KAAS;IACpB,IAAI,CAACU,YAAY,CAACC,IAAI,CAACX,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAC5C;;AAzBSN,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAe;EAAAC;IAAAC;IAAAC;IAAAT;IAAAC;IAAAC;EAAA;EAAAQ;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCPhCxB,gCAIgC;MADhCA;QAAA,OAAUyB,0BAAsB;MAAA,EAAC;QAAA,OACvBA,wBAAoB;MAAA,EADG;MAHjCzB,iBAIgC;MAEhCA,oEAA6D;;;MANtDA,+BAAa;MAMdA,eAAW;MAAXA,gCAAW","names":["EventEmitter","i0","FileUploadComponent","constructor","handleFileSize","event","listOfFiles","target","files","file","size","fileSizeLimit","error","errorMessage","fileUploaded","fileSelected","emit","selectors","inputs","accept","styles","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Kois\\projects\\assessment_software\\assessment_software\\src\\app\\file-upload-component\\file-upload.component.ts","C:\\Users\\Kois\\projects\\assessment_software\\assessment_software\\src\\app\\file-upload-component\\file-upload.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-file-upload',\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.css']\r\n})\r\nexport class FileUploadComponent {\r\n    listOfFiles:any[]=[];\r\n    \r\n    type: string = 'file';\r\n    @Input() accept: string = '';\r\n    @Input() styles: string = '';\r\n    @Input() fileSizeLimit:any;\r\n    @Input() error:boolean=false;\r\n    @Input() errorMessage:string='Unknown error ';\r\n    @Output() fileSelected = new EventEmitter;\r\n\r\n    handleFileSize(event:any){\r\n      this.listOfFiles=event.target.files;    \r\n      for (let file of this.listOfFiles){\r\n        if (file.size/1000000>=this.fileSizeLimit)\r\n       { this.error= true;\r\n        this.errorMessage='Sorry, the file you uploaded is too large. The maximum file size is '+this.fileSizeLimit+ 'MB';\r\n      }\r\n        else\r\n        this.error= false;\r\n      }\r\n    }\r\n    \r\n    fileUploaded(event:any){\r\n      this.fileSelected.emit(event.target.files);\r\n    }\r\n}\r\n","<input [type]=\"type\"\r\n[accept]=\"accept\"\r\n[ngClass]=\"styles\"\r\n(change)=\"handleFileSize($event)\"\r\n(change)=\"fileUploaded($event)\">\r\n\r\n<div *ngIf=\"error\" style=\"color: red;\">{{errorMessage}}</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}